a <- base
a;
a <- base
a
a <- base
a
a <- base
a
a <- base
a
base
fit <- factanal(base, 3, rotation="varimax")
View(base)
base_alterada=base["Questão.1","Questão.2","Questão.3"]
base_alterada=base["Questão.1","Questão.2","Questão.3"]
base_alterada=base["Idade","Curso"]
base_alterada=base[c(2:10)]
View(base_alterada)
#' Somando Vetores
#' A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
total_daily <- poker_vector + roulette_vector
total_daily <- poker_vector + roulette_vector
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
#' Comparando as Somas
# Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
poker_midweek = poker_midweek[c(2,3,4)]
poker_midweek
poker_midweek = poker_vector[c(2,3,4)]
poker_midweek
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
#' Comparando as Somas
# Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
#' Selecionando uma variável
# Define a new variable based on a selection
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[c(2,3,4)]
poker_midweek
#' Uma forma mais elegante de fazer isso é usar a notação i:j, por exemplo:
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[2:4]
poker_midweek
# Define a new variable based on a selection
roulette_selection_vector <- roulette_vector[2:4]
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
#' Comparando as Somas
# Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
#' Selecionando uma variável
# Define a new variable based on a selection
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[c(2,3,4)]
poker_midweek
#' Uma forma mais elegante de fazer isso é usar a notação i:j, por exemplo:
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[2:4]
poker_midweek
# Define a new variable based on a selection
roulette_selection_vector <- roulette_vector[2:4]
#' Selecionando as variáveis usando o nome e avaliando a média.
# Select poker results for Monday, Tuesday and Wednesday
poker_start <- poker_vector["Monday", "Tuesday", "Wednesday"]
# Calculate the average of the elements in poker_start
mean(pojer_start)
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
#' Comparando as Somas
# Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
#' Selecionando uma variável
# Define a new variable based on a selection
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[c(2,3,4)]
poker_midweek
#' Uma forma mais elegante de fazer isso é usar a notação i:j, por exemplo:
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[2:4]
poker_midweek
# Define a new variable based on a selection
roulette_selection_vector <- roulette_vector[2:4]
#' Selecionando as variáveis usando o nome e avaliando a média.
# Select poker results for Monday, Tuesday and Wednesday
poker_start <- poker_vector["Monday", "Tuesday", "Wednesday"]
# Calculate the average of the elements in poker_start
mean(poker_start)
poker_start <- poker_vector["Monday", "Tuesday", "Wednesday"]
poker_start <- poker_vector[c("Monday", "Tuesday", "Wednesday")]
# Calculate the average of the elements in poker_start
mean(poker_start)
c(4,5,6)>5
compar = c(4,5,6)>5
compar
c(33,4,4,3,3) + 2
c(33,4,4,3,3)-c(2,3)
c(33,4,4,3,3,4)-c(2,3)
c(33,4,4,3,3,4)-c(2,3)
c(33,4,4,3,3,4)-c(2,3)
selection_vector <- poker_vector > 0
selection_vector
poker_winning_days <- poker_vector[selection_vector]
poker_winning_days
poker_winning_days = poker_vector[TRUE]
poker_winning_days
poker_winning_days = poker_vector[c(TRUE, FALSE)]
poker_winning_days
poker_winning_days = poker_vector[c(TRUE, FALSE)]
poker_winning_days
numeric_vector <- c(1, 10, 49)
character_vector <- c("a", "b", "c")
#' c() = Combine Function - Cria um vetor!
# Complete the code for boolean_vector
boolean_vector <- c(TRUE, FALSE, TRUE)
#' Montando Vetores
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <-  c(-24, -50, 100, 350, 10)
poker_vector
#' Nomeando as Variáveis de um Vetor
# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
# Assign the names of the day to roulette_vector and poker_vector
names(poker_vector) <-   days_vector
names(roulette_vector) <- days_vector
dia = "Monday"
roulette_vector[dia]
#' Somando Vetores
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- B_vector + A_vector
# Print out total_vector
total_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector + roulette_vector
total_daily
#' Outra maneira seria somar os vetores antes
# Total winnings with poker
total_poker <- sum(poker_vector)
# Total winnings with roulette
total_roulette <-  sum(roulette_vector)
# Total winnings overall
total_week <- total_poker + total_roulette
# Print out total_week
total_week
#' Comparando as Somas
# Check if you realized higher total gains in poker than in roulette
total_poker > total_roulette
#' Selecionando uma variável
# Define a new variable based on a selection
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[c(2,3,4)]
poker_midweek
#' Uma forma mais elegante de fazer isso é usar a notação i:j, por exemplo:
#' Selecionando vários elementos dentro de um vetor:
poker_midweek = poker_vector[2:4]
poker_midweek
# Define a new variable based on a selection
roulette_selection_vector <- roulette_vector[2:4]
#' Selecionando as variáveis usando o nome e avaliando a média.
# Select poker results for Monday, Tuesday and Wednesday
poker_start <- poker_vector[c("Monday", "Tuesday", "Wednesday")]
# Calculate the average of the elements in poker_start
mean(poker_start)
# Which days did you make money on poker?
selection_vector <- poker_vector > 0
selection_vector
#' Selecionando dados de um vetor com um vetor de dados booleanos
poker_winning_days <- poker_vector[selection_vector]
# Isso aqui em baixo pode selecionar dia sim, dia não
# poker_winning_days = poker_vector[c(TRUE, FALSE)]
poker_winning_days
#' Seleção Avançada
roulette_winning_days <- roulette_vector[selection_vector]
# Which days did you make money on roulette?
selection_vector <- roulette_vector > 0
# Select from roulette_vector these days
roulette_winning_days <- roulette_vector[selection_vector]
roulette_winning_days
install.packages("knitr")
install.packages("markdown")
install.packages("knitr")
script.dir <- dirname(sys.frame(1)$ofile)
script.dir
script.dir <- dirname(sys.frame(1)$ofile)
script.dir <- dirname(sys.frame(1)$ofile)
knitr::spin("./01.Vectors.R")
knitr::spin("./01.Vectors.R")
knitr::spin("./01.Vectors.R")
getwd()
getwd()
getwd()
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
this.dir <- dirname(parent.frame(2)$ofile)
source('D:/DADOS/dev/r-playground/scripts/DataCamp/01.Vectors.R')
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
getwd()
source('D:/DADOS/dev/r-playground/scripts/DataCamp/ZZ.Knitr_SPIN.R')
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
knitr::spin("./01.Vectors.R")
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
knitr::spin("./01.Vectors.R")
source('D:/DADOS/dev/r-playground/scripts/DataCamp/01.Vectors.R')
source('D:/DADOS/dev/r-playground/scripts/DataCamp/ZZ.Knitr_SPIN.R')
source('D:/DADOS/dev/r-playground/scripts/DataCamp/01.Vectors.R')
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
knitr::spin("./01.Vectors.R")
#'Título
#'========================================================
#'author: Pedro Nascimento de Lima
#'date:
#'autosize: true
#'Título Slide
#'========================================================
#'Texto Slide
# Comentário no Código
a = 2
b = a^2
b
#'Título
#'========================================================
#'author: Pedro Nascimento de Lima
#'date:
#'autosize: true
#'Título Slide
#'========================================================
#'Vamos Aprender a elevar ao quadrado...
# Comentário no Código
a = 2
b = a^2
b
dados = 2:200
dados = dados*rnorm(1,mean=2,sd=2.3)
hist(dados)
source('D:/DADOS/dev/r-playground/scripts/DataCamp/ZZ.Knitr_SPIN.R')
knitr::spin("./ZZ_Modelo_Apresentação_R.R")
knitr::spin("./ZZ_Modelo_Apresentação_R.R")
system("locale")
system("systeminfo")
knitr::spin("./ZZ_Modelo_Apresentação_R.R")
